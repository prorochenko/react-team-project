{"version":3,"file":"static/js/149.2b91d6e4.chunk.js","mappings":"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","sources":["webpack://react-team-project/./src/components/CalculatorForm/CalculatorForm.module.scss?8ed0","components/CalculatorForm/CalculatorForm.js","pages/Calculator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnOrange\":\"CalculatorForm_btnOrange__hX0+f\",\"active\":\"CalculatorForm_active__tjHJG\",\"calculatorFormTitle\":\"CalculatorForm_calculatorFormTitle__lZSyY\",\"calculatorFormContainer\":\"CalculatorForm_calculatorFormContainer__67KrH\",\"calculatorForm\":\"CalculatorForm_calculatorForm__iw7Kb\",\"calculatorFormInputContainer\":\"CalculatorForm_calculatorFormInputContainer__xFA36\",\"calculatorFormInput\":\"CalculatorForm_calculatorFormInput__8u6s-\",\"calculatorFormRadioText\":\"CalculatorForm_calculatorFormRadioText__N+k4q\",\"calculatorFormRadioInputBox\":\"CalculatorForm_calculatorFormRadioInputBox__pVyLc\",\"calculatorFormRadioBox\":\"CalculatorForm_calculatorFormRadioBox__8T9Ye\",\"calculatorFormRadioInput\":\"CalculatorForm_calculatorFormRadioInput__zVCCj\",\"errorMessage\":\"CalculatorForm_errorMessage__B+0Iq\"};","import scss from './CalculatorForm.module.scss';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport React from 'react';\nimport { createParamsRegisterUser } from 'redux/auth/authSlice';\nimport {\n  selectUserId,\n  selectIsLoggedIn,\n  selectParamsRegisterUser,\n  selectIsRegister,\n} from 'redux/auth/selectors';\nimport {\n  fetchCalculatorInfoNotId,\n  fetchCalculatorInfoById,\n} from 'redux/auth/operations';\nimport { useEffect } from 'react';\n\nconst schema = yup.object().shape({\n  height: yup.number().min(100).max(250).required(),\n  age: yup.number().min(18).max(100).required(),\n  weight: yup.number().min(20).max(500).required(),\n  desiredWeight: yup.number().min(20).max(500).required(),\n});\n\nconst initialValues = {\n  height: '',\n  age: '',\n  weight: '',\n  desiredWeight: '',\n  bloodType: null,\n};\n\nconst CalculatorForm = () => {\n  const userId = useSelector(selectUserId);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const paramsRegisterUser = useSelector(selectParamsRegisterUser);\n  const isRegister = useSelector(selectIsRegister);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isLoggedIn && paramsRegisterUser && isRegister) {\n      dispatch(fetchCalculatorInfoById({ ...paramsRegisterUser, userId }));\n    }\n  }, [isLoggedIn, paramsRegisterUser, dispatch, userId, isRegister]);\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (userId === null) {\n      dispatch(createParamsRegisterUser(values));\n      dispatch(fetchCalculatorInfoNotId({ ...values }));\n    } else {\n      dispatch(fetchCalculatorInfoById({ ...values, userId }));\n    }\n    resetForm();\n  };\n\n  return (\n    <div className={scss.calculatorFormContainer}>\n      <h2 className={scss.calculatorFormTitle}>\n        Calculate your daily calorie intake right now\n      </h2>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <Form className={scss.calculatorForm}>\n          <span className={scss.calculatorFormInputContainer}>\n            <label>\n              <Field\n                className={scss.calculatorFormInput}\n                type=\"text\"\n                placeholder=\"Height *\"\n                name=\"height\"\n              ></Field>\n              <ErrorMessage\n                className={scss.errorMessage}\n                name=\"height\"\n                component=\"div\"\n              ></ErrorMessage>\n            </label>\n            <label>\n              <Field\n                className={scss.calculatorFormInput}\n                type=\"text\"\n                placeholder=\"Age *\"\n                name=\"age\"\n              ></Field>\n              <ErrorMessage\n                className={scss.errorMessage}\n                name=\"age\"\n                component=\"div\"\n              ></ErrorMessage>\n            </label>\n            <label>\n              <Field\n                className={scss.calculatorFormInput}\n                type=\"text\"\n                placeholder=\"Current weight *\"\n                name=\"weight\"\n              ></Field>\n              <ErrorMessage\n                className={scss.errorMessage}\n                name=\"weight\"\n                component=\"div\"\n              ></ErrorMessage>\n            </label>\n            <label>\n              <Field\n                className={scss.calculatorFormInput}\n                type=\"text\"\n                placeholder=\"Desired weight *\"\n                name=\"desiredWeight\"\n              ></Field>\n              <ErrorMessage\n                className={scss.errorMessage}\n                name=\"desiredWeight\"\n                component=\"div\"\n              ></ErrorMessage>\n            </label>\n            <div>\n              <span className={scss.calculatorFormRadioText}>Blood type *</span>\n              <div className={scss.calculatorFormRadioBox}>\n                <div className={scss.calculatorFormRadioInputBox}>\n                  <Field\n                    className={scss.calculatorFormRadioInput}\n                    type=\"radio\"\n                    name=\"bloodType\"\n                    value=\"1\"\n                  ></Field>\n                  <span className={scss.calculatorFormRadioText}>1</span>\n                </div>\n                <div className={scss.calculatorFormRadioInputBox}>\n                  <Field\n                    className={scss.calculatorFormRadioInput}\n                    type=\"radio\"\n                    name=\"bloodType\"\n                    value=\"2\"\n                  ></Field>\n                  <span className={scss.calculatorFormRadioText}>2</span>\n                </div>\n                <div className={scss.calculatorFormRadioInputBox}>\n                  <Field\n                    className={scss.calculatorFormRadioInput}\n                    type=\"radio\"\n                    name=\"bloodType\"\n                    value=\"3\"\n                  ></Field>\n                  <span className={scss.calculatorFormRadioText}>3</span>\n                </div>\n                <div className={scss.calculatorFormRadioInputBox}>\n                  <Field\n                    className={scss.calculatorFormRadioInput}\n                    type=\"radio\"\n                    name=\"bloodType\"\n                    value=\"4\"\n                  ></Field>\n                  <span className={scss.calculatorFormRadioText}>4</span>\n                </div>\n              </div>\n            </div>\n          </span>\n\n          <button type=\"submit\" className={scss.btnOrange}>\n            Start losing weight\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\nexport default CalculatorForm;\n","// import { Helmet } from 'react-helmet-async';\nimport CalculatorForm from '../components/CalculatorForm/CalculatorForm';\n\nconst Calculator = () => {\n  return (\n    <div>\n      <CalculatorForm />\n    </div>\n  );\n};\nexport default Calculator;\n"],"names":["schema","yup","shape","height","min","max","required","age","weight","desiredWeight","initialValues","bloodType","userId","useSelector","selectUserId","isLoggedIn","selectIsLoggedIn","paramsRegisterUser","selectParamsRegisterUser","isRegister","selectIsRegister","dispatch","useDispatch","useEffect","fetchCalculatorInfoById","className","scss","onSubmit","values","resetForm","createParamsRegisterUser","fetchCalculatorInfoNotId","validationSchema","type","placeholder","name","component","value"],"sourceRoot":""}