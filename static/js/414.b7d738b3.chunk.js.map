{"version":3,"file":"static/js/414.b7d738b3.chunk.js","mappings":"8NACA,GAAgB,UAAY,6BAA6B,eAAiB,kCAAkC,YAAc,+BAA+B,UAAY,6BAA6B,SAAW,4BAA4B,OAAS,0BAA0B,cAAgB,iCAAiC,MAAQ,yBAAyB,MAAQ,0B,oBCKzVA,EAAY,WACvB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAoCJ,EAAAA,EAAAA,WAAS,GAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,GAA0CN,EAAAA,EAAAA,WAAS,GAAnD,eAAOO,EAAP,KAAsBC,EAAtB,KACA,GAAoCR,EAAAA,EAAAA,UAAS,qBAA7C,eAAOS,EAAP,KAAmBC,EAAnB,KACA,GAA0CV,EAAAA,EAAAA,UAAS,wBAAnD,eAAOW,EAAP,KAAsBC,EAAtB,KAEMC,EAAc,SAAAC,GAClB,OAAQA,EAAEC,OAAOC,MACf,IAAK,QACHV,GAAc,GACd,MACF,IAAK,WACHE,GAAiB,GACjB,MACF,QACE,OAEL,EAyBKS,GAAWC,EAAAA,EAAAA,MAejB,OACE,gBAAKC,UAAWC,EAAAA,IAAhB,UASE,iBAAKD,UAAWC,EAAAA,UAAhB,WACE,eAAID,UAAWC,EAAAA,OAAf,sBACA,kBAAMC,SAzBS,SAAAP,GACnBA,EAAEQ,iBACF,IAAMC,EAAOT,EAAEU,cACfP,GACEQ,EAAAA,EAAAA,IAAM,CACJxB,MAAOsB,EAAKG,SAASzB,MAAM0B,MAC3BxB,SAAUoB,EAAKG,SAASvB,SAASwB,SAGrCJ,EAAKK,OACN,EAemCC,aAAa,MAA3C,WACE,iBAAKV,UAAWC,EAAAA,SAAhB,WACE,mBAAOD,UAAWC,EAAAA,MAAlB,UACGf,GAAcI,IACb,gBAAKqB,MAAO,CAAEC,MAAO,OAArB,SAA+BtB,KAEjC,kBACEuB,UAAQ,EACRH,aAAa,OACbF,MAAO1B,EACPgC,SAAU,SAAAnB,GAAC,OA5DJ,SAAAA,GACnBZ,EAASY,EAAEC,OAAOY,OAEhB,6GACMO,KAAKC,OAAOrB,EAAEC,OAAOY,OAAOS,eAGlC1B,EAAc,IAFdA,EAAc,0BAIjB,CAmD4B2B,CAAavB,EAAjB,EACXwB,OAAQ,SAAAxB,GAAC,OAAID,EAAYC,EAAhB,EACTK,UAAWC,EAAAA,MACXmB,KAAK,QACLvB,KAAK,QACLwB,YAAY,gBAGhB,6BACGjC,GAAiBI,IAChB,gBAAKmB,MAAO,CAAEC,MAAO,OAArB,SAA+BpB,KAEjC,kBACEqB,UAAQ,EACRH,aAAa,QACbF,MAAOxB,EACP8B,SAAU,SAAAnB,GAAC,OAjED,SAAAA,GACtBV,EAAYU,EAAEC,OAAOY,OACjBb,EAAEC,OAAOY,MAAMc,OAAS,GAC1B7B,EAAiB,0CACZE,EAAEC,OAAOY,OACZf,EAAiB,yBAGnBA,EAAiB,GAEpB,CAuD4B8B,CAAgB5B,EAApB,EACXwB,OAAQ,SAAAxB,GAAC,OAAID,EAAYC,EAAhB,EACTK,UAAWC,EAAAA,MACXmB,KAAK,WACLvB,KAAK,WACLwB,YAAY,sBAKlB,iBAAKrB,UAAWC,EAAAA,cAAhB,WACE,mBAAQD,UAAWC,EAAAA,UAAemB,KAAK,SAAvC,oBAGA,SAAC,KAAD,CAASpB,UAAWC,EAAAA,eAAoBuB,GAAG,YAA3C,gCAQX,EC1Hc,SAASC,IACtB,OACE,4BACE,UAAC,KAAD,YACE,iBAAM5B,KAAK,cAAc6B,QAAQ,gBACjC,yCAEF,SAAC9C,EAAD,MAGL,C","sources":["webpack://react-team-project/./src/components/LoginForm/LoginForm.module.scss?2e18","components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnOrange\":\"LoginForm_btnOrange__P72we\",\"btnTransperent\":\"LoginForm_btnTransperent__9LAeH\",\"leaverSmall\":\"LoginForm_leaverSmall__FTaki\",\"container\":\"LoginForm_container__d3-dh\",\"register\":\"LoginForm_register__l9FHG\",\"header\":\"LoginForm_header__g-t-5\",\"buttonSection\":\"LoginForm_buttonSection__W3nbb\",\"input\":\"LoginForm_input__7Ngg7\",\"label\":\"LoginForm_label__RGIMj\"};","import { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { logIn } from 'redux/auth/operations';\nimport css from './LoginForm.module.scss';\nimport { useState } from 'react';\n\nexport const LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailDirty, setEmailDirty] = useState(false);\n  const [passwordDirty, setPasswordDirty] = useState(false);\n  const [emailError, setEmailError] = useState('Pleas enter email');\n  const [passwordError, setPasswordError] = useState('Pleas enter password');\n\n  const blurHandler = e => {\n    switch (e.target.name) {\n      case 'email':\n        setEmailDirty(true);\n        break;\n      case 'password':\n        setPasswordDirty(true);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const emailHandler = e => {\n    setEmail(e.target.value);\n    const re =\n      /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\n    if (!re.test(String(e.target.value).toLowerCase())) {\n      setEmailError('Pleas enter valid email');\n    } else {\n      setEmailError('');\n    }\n  };\n\n  const passwordHandler = e => {\n    setPassword(e.target.value);\n    if (e.target.value.length < 8) {\n      setPasswordError('Password must be at least 8 characters');\n      if (!e.target.value) {\n        setPasswordError('Pleas enter password');\n      }\n    } else {\n      setPasswordError('');\n    }\n  };\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n\n  return (\n    <div className={css.box}>\n      {/* <img\n        // style={styles.bounceInLeft}\n        className={css.leaverSmall}\n        src={leaverMin}\n        alt=\"\"\n        width=\"95px\"\n        height=\"75px\"\n      />{' '} */}\n      <div className={css.container}>\n        <h3 className={css.header}>SIGN IN</h3>\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\n          <div className={css.register}>\n            <label className={css.label}>\n              {emailDirty && emailError && (\n                <div style={{ color: 'red' }}>{emailError}</div>\n              )}\n              <input\n                required\n                autoComplete=\"name\"\n                value={email}\n                onChange={e => emailHandler(e)}\n                onBlur={e => blurHandler(e)}\n                className={css.input}\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email *\"\n              />\n            </label>\n            <label>\n              {passwordDirty && passwordError && (\n                <div style={{ color: 'red' }}>{passwordError}</div>\n              )}\n              <input\n                required\n                autoComplete=\"email\"\n                value={password}\n                onChange={e => passwordHandler(e)}\n                onBlur={e => blurHandler(e)}\n                className={css.input}\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password *\"\n              />\n            </label>\n          </div>\n\n          <div className={css.buttonSection}>\n            <button className={css.btnOrange} type=\"submit\">\n              Login\n            </button>\n            <NavLink className={css.btnTransperent} to=\"/register\">\n              Register\n            </NavLink>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n","import { Helmet } from 'react-helmet-async';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <meta name=\"description\" content=\"Login page\" />\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["LoginForm","useState","email","setEmail","password","setPassword","emailDirty","setEmailDirty","passwordDirty","setPasswordDirty","emailError","setEmailError","passwordError","setPasswordError","blurHandler","e","target","name","dispatch","useDispatch","className","css","onSubmit","preventDefault","form","currentTarget","logIn","elements","value","reset","autoComplete","style","color","required","onChange","test","String","toLowerCase","emailHandler","onBlur","type","placeholder","length","passwordHandler","to","Login","content"],"sourceRoot":""}