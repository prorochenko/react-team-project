{"version":3,"file":"static/js/547.68cea0cb.chunk.js","mappings":"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","sources":["webpack://react-team-project/./src/components/DiaryComp/DiaryAddProductForm/DiaryAddProductForm.module.scss?6227","components/DiaryComp/DiaryAddProductForm/DiaryAddProductForm.js","webpack://react-team-project/./src/components/DiaryComp/DiaryProductsList/DiaryProductsListItem/DiaryProductsListItem.module.scss?74c8","components/DiaryComp/DiaryProductsList/DiaryProductsListItem/DiaryProductsListItem.js","webpack://react-team-project/./src/components/DiaryComp/DiaryProductsList/DiaryProductsList.module.scss?defe","components/DiaryComp/DiaryProductsList/DiaryProductsList.js","webpack://react-team-project/./src/components/DiaryComp/DiaryComp.module.scss?dfe1","components/DiaryComp/DiaryDateCalendar/DiaryDateÐ¡alendar.module.scss","components/DiaryComp/DiaryDateCalendar/DiaryDateCalendar.js","components/DiaryComp/DiaryComp.js","pages/Diary.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formProduct\":\"DiaryAddProductForm_formProduct__bLNkG\",\"formLabel\":\"DiaryAddProductForm_formLabel__2iQOj\",\"formInput\":\"DiaryAddProductForm_formInput__yClS2\",\"formInput__gram\":\"DiaryAddProductForm_formInput__gram__0UnmD\",\"formButton\":\"DiaryAddProductForm_formButton__x9kC6\",\"icon\":\"DiaryAddProductForm_icon__AaQOc\"};","import { useState } from 'react';\n\nimport { FiPlus } from 'react-icons/fi';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addDay, fetchProduct } from 'redux/products/products-operations';\nimport {\n  selectDateCalendar,\n  selectProduct,\n} from 'redux/products/products-selectors';\n\nimport scss from './DiaryAddProductForm.module.scss';\n\nexport default function DiaryAddProductForm() {\n  const dispatch = useDispatch();\n  const products = useSelector(selectProduct);\n  const date = useSelector(selectDateCalendar);\n\n  const [product, setProduct] = useState('');\n  const [grams, setGrams] = useState('');\n\n  const idProduct = () => {\n    if (products) {\n      const index = products.findIndex(pro => pro.title.ru === product);\n      if (index >= 0) {\n        return products[index]._id;\n      }\n    }\n  };\n  //dfdfdf\n  // const idProduct = () => {\n  //   if (products) {\n  //     return products[0]._id;\n  //   }\n  // };\n\n  const productId = idProduct();\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'product':\n        if (value.length > 2) {\n          dispatch(fetchProduct(value));\n        }\n\n        return setProduct(value);\n\n      case 'grams':\n        return setGrams(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const weight = +form.elements.grams.value;\n\n    dispatch(addDay({ date, productId, weight }));\n    setProduct('');\n    setGrams('');\n  };\n\n  // const getCalendarDate = newDate => {\n  //   date = moment(newDate).format('yyyy-MM-DD');\n  // };\n\n  return (\n    <>\n      {/* <DiaryDateCalendar getCalendarDate={getCalendarDate} /> */}\n      <div className={scss.form}>\n        <form className={scss.formProduct} onSubmit={handleSubmit}>\n          <label className={scss.formLabel}>\n            <input\n              className={scss.formInput}\n              type=\"text\"\n              name=\"product\"\n              value={product}\n              onChange={handleChange}\n              placeholder=\"Enter product name\"\n              list=\"list\"\n              autoComplete=\"off\"\n              required\n            />\n            {products?.length > 0 && (\n              <datalist id=\"list\">\n                {products.map(product => (\n                  <option key={product._id} value={product.title.ru} />\n                ))}\n              </datalist>\n            )}\n          </label>\n          <label className={scss.formLabel}>\n            <input\n              className={scss.formInput + ' ' + scss.formInput__gram}\n              type=\"text\"\n              pattern=\"[0-9]+\"\n              name=\"grams\"\n              value={grams}\n              onChange={handleChange}\n              placeholder=\"Grams\"\n              required\n              autoComplete=\"off\"\n            />\n          </label>\n          <button className={scss.formButton} type=\"submit\">\n            <FiPlus className={scss.icon} />\n          </button>\n        </form>\n      </div>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"productsListItem\":\"DiaryProductsListItem_productsListItem__5+qUY\",\"productsName\":\"DiaryProductsListItem_productsName__PpMwR\",\"productsGramm\":\"DiaryProductsListItem_productsGramm__wokGZ\",\"productsKcal\":\"DiaryProductsListItem_productsKcal__57hZE\",\"productsKcal__text\":\"DiaryProductsListItem_productsKcal__text__2Pgwz\",\"productsBtn\":\"DiaryProductsListItem_productsBtn__J70jN\",\"productsIcon\":\"DiaryProductsListItem_productsIcon__-wCu9\"};","import { FiX } from 'react-icons/fi';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { deleteProductDay } from 'redux/products/products-operations';\nimport { selectDayInfo } from 'redux/products/products-selectors';\nimport scss from './DiaryProductsListItem.module.scss';\n\nexport const DiaryProductsListItem = ({ product }) => {\n  const dispatch = useDispatch();\n  const dayId = useSelector(selectDayInfo);\n  const eatenProductId = product.id;\n  const handleDelete = () => {\n    console.log(dayId, eatenProductId);\n    dispatch(deleteProductDay({ dayId, eatenProductId }));\n  };\n\n  return (\n    <li className={scss.productsListItem}>\n      <div className={scss.productsName}>{product.title}</div>\n      <div className={scss.productsGramm}>{product.weight}</div>\n      <div className={scss.productsKcal}>\n        {Math.round(product.kcal)}\n        <span className={scss.productsKcal__text}>kcal</span>\n      </div>\n      <button className={scss.productsBtn} type=\"button\" onClick={handleDelete}>\n        <FiX className={scss.productsIcon} />\n      </button>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"DiaryProductsList_box__KuU3x\",\"productsList\":\"DiaryProductsList_productsList__t9KeG\"};","import { useSelector } from 'react-redux';\nimport { DiaryProductsListItem } from './DiaryProductsListItem/DiaryProductsListItem';\nimport scss from './DiaryProductsList.module.scss';\nimport { selectEaten } from 'redux/products/products-selectors';\n\nexport default function DiaryProductsList() {\n  const products = useSelector(selectEaten);\n  return (\n    <div className={scss.box}>\n      {products.length > 0 ? (\n        <ul className={scss.productsList}>\n          {products.map(product => (\n            <DiaryProductsListItem product={product} key={product.id} />\n          ))}\n        </ul>\n      ) : (\n        <div>No product selected</div>\n      )}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"DiaryComp_container__CfpKn\",\"formBtn\":\"DiaryComp_formBtn__odGpQ\",\"icon\":\"DiaryComp_icon__5WXW6\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"DiaryDateÐ¡alendar_wrap__iht4j\",\"calendarWrap\":\"DiaryDateÐ¡alendar_calendarWrap__nsGMn\",\"calendar\":\"DiaryDateÐ¡alendar_calendar__B2bh-\",\"calendarDate\":\"DiaryDateÐ¡alendar_calendarDate__MR7f+\"};","import { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-date-picker';\nimport css from './DiaryDateÐ¡alendar.module.scss';\nimport { getInfoByDay } from '../../../redux/products/products-operations';\nimport { getDateCalendar } from 'redux/products/products-slice';\n// import styled from 'styled-components';\nexport default function DiaryDateCalendar() {\n  const [value, setValue] = useState(new Date());\n\n  const dispatch = useDispatch();\n\n  useEffect(\n    e => {\n      // dispatch(addDay(moment(e).format('yyyy-MM-DD')));\n      dispatch(getInfoByDay({ date: moment(e).format('yyyy-MM-DD') }));\n    },\n    [dispatch]\n  );\n  useEffect(() => {\n    dispatch(getDateCalendar(moment(value).format('yyyy-MM-DD')));\n    // getCalendarDate(value);\n  }, [value, dispatch]);\n\n  const handleChange = e => {\n    setValue(e);\n\n    // dispatch(addDay(moment(e).format('yyyy-MM-DD')));\n    dispatch(getInfoByDay({ date: moment(e).format('yyyy-MM-DD') }));\n    dispatch(getDateCalendar(moment(e).format('yyyy-MM-DD')));\n  };\n\n  return (\n    <div className={css.wrap}>\n      <DatePicker\n        onChange={handleChange}\n        value={value}\n        clearIcon={null}\n        format={'dd.MM.y'}\n        className={css.calendarWrap}\n        calendarClassName={css.calendar}\n        tileClassName={css.calendarDate}\n        // calendarIcon={styled: {}}\n      />\n    </div>\n  );\n}\n","import DiaryAddProductForm from './DiaryAddProductForm/DiaryAddProductForm';\n\nimport DiaryProductsList from './DiaryProductsList/DiaryProductsList';\nimport { FiPlus } from 'react-icons/fi';\nimport scss from './DiaryComp.module.scss';\nimport DiaryDateCalendar from './DiaryDateCalendar/DiaryDateCalendar';\n\nimport { useDispatch } from 'react-redux';\nimport { useCallback } from 'react';\nimport { toggle } from 'redux/products/products-slice';\n\nexport default function DiaryComp() {\n  const dispatch = useDispatch();\n  // const [date, setDate] = useState('');\n\n  // const getCalendarDate = newDate => {\n  //   setDate(moment(newDate).format('yyyy-MM-DD'));\n  // };\n\n  const openModal = useCallback(() => {\n    dispatch(toggle(true));\n  }, [dispatch]);\n\n  return (\n    <div className={scss.container}>\n      <DiaryDateCalendar />\n      <DiaryAddProductForm />\n      <DiaryProductsList />\n      <button className={scss.formBtn} type=\"button\" onClick={openModal}>\n        <FiPlus className={scss.icon} />\n      </button>\n    </div>\n  );\n}\n","import DiaryComp from 'components/DiaryComp/DiaryComp';\n\nconst Diary = () => {\n  return (\n    <>\n      <title>Diary</title>\n      <DiaryComp />\n    </>\n  );\n};\nexport default Diary;\n"],"names":["DiaryAddProductForm","dispatch","useDispatch","products","useSelector","selectProduct","date","selectDateCalendar","useState","product","setProduct","grams","setGrams","productId","index","findIndex","pro","title","ru","_id","idProduct","handleChange","target","name","value","length","fetchProduct","className","scss","onSubmit","e","preventDefault","weight","elements","addDay","type","onChange","placeholder","list","autoComplete","required","id","map","pattern","DiaryProductsListItem","dayId","selectDayInfo","eatenProductId","Math","round","kcal","onClick","console","log","deleteProductDay","DiaryProductsList","selectEaten","DiaryDateCalendar","Date","setValue","useEffect","getInfoByDay","moment","format","getDateCalendar","css","clearIcon","calendarClassName","tileClassName","DiaryComp","openModal","useCallback","toggle"],"sourceRoot":""}