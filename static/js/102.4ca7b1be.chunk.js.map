{"version":3,"file":"static/js/102.4ca7b1be.chunk.js","mappings":"yOACA,GAAgB,UAAY,gCAAgC,eAAiB,qCAAqC,UAAY,gCAAgC,SAAW,+BAA+B,OAAS,6BAA6B,cAAgB,oCAAoC,MAAQ,4BAA4B,MAAQ,6B,UCKjUA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAkCN,EAAAA,EAAAA,UAAS,IAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KACA,GAAoCR,EAAAA,EAAAA,WAAS,GAA7C,eAAOS,EAAP,KAAmBC,EAAnB,KACA,GAA0CV,EAAAA,EAAAA,WAAS,GAAnD,eAAOW,EAAP,KAAsBC,EAAtB,KACA,GAAkCZ,EAAAA,EAAAA,UAAS,oBAA3C,eAAOa,EAAP,KAAkBC,EAAlB,KACA,GAAoCd,EAAAA,EAAAA,UAAS,qBAA7C,eAAOe,EAAP,KAAmBC,EAAnB,KACA,GAA0ChB,EAAAA,EAAAA,UAAS,wBAAnD,eAAOiB,EAAP,KAAsBC,EAAtB,KACA,GAAkClB,EAAAA,EAAAA,WAAS,GAA3C,eAAOmB,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WAEND,IADEL,GAAcE,GAAiBJ,GAKpC,GAAE,CAACE,EAAYE,EAAeJ,IAE/B,IAAMS,EAAc,SAAAC,GAClB,OAAQA,EAAEC,OAAOvB,MACf,IAAK,OACHO,GAAa,GACb,MACF,IAAK,QACHE,GAAc,GACd,MACF,IAAK,WACHE,GAAiB,GACjB,MACF,QACE,OAEL,EAqDD,OACE,gBAAKa,UAAWC,EAAAA,IAAhB,UACE,iBAAKD,UAAWC,EAAAA,UAAhB,WACE,eAAID,UAAWC,EAAAA,OAAf,uBACA,0BACE,kBAAMC,SArBO,SAAAJ,GACnBA,EAAEK,iBACF,IAAMC,EAAON,EAAEO,cAEfhC,GACEiC,EAAAA,EAAAA,IAAS,CACPC,SAAUH,EAAKI,SAAShC,KAAKiC,MAC7B/B,MAAO0B,EAAKI,SAAS9B,MAAM+B,MAC3B7B,SAAUwB,EAAKI,SAAS5B,SAAS6B,SAGrC5B,EAAY,IACZF,EAAS,IACTF,EAAQ,GACT,EAOqCiC,aAAa,MAA3C,WACE,iBAAKV,UAAWC,EAAAA,SAAhB,WACE,mBAAOD,UAAWC,EAAAA,MAAlB,UACGnB,GAAaM,IACZ,gBAAKuB,MAAO,CAAEC,MAAO,OAArB,SAA+BxB,KAEjC,kBACEsB,aAAa,OACbG,UAAQ,EACRJ,MAAOjC,EACPsC,SAAU,SAAAhB,GAAC,OAlEP,SAAAA,GAClBrB,EAAQqB,EAAEC,OAAOU,OACbX,EAAEC,OAAOU,MAAMM,OAAS,GAC1B1B,EAAa,kDACRS,EAAEC,OAAOU,OACZpB,EAAa,qBAGfA,EAAa,GAEhB,CAwD8B2B,CAAYlB,EAAhB,EACXmB,OAAQ,SAAAnB,GAAC,OAAID,EAAYC,EAAhB,EACTE,UAAWC,EAAAA,MACXiB,KAAK,OACL1C,KAAK,OACL2C,YAAY,eAGhB,mBAAOnB,UAAWC,EAAAA,MAAlB,UACGjB,GAAcM,IACb,gBAAKqB,MAAO,CAAEC,MAAO,OAArB,SAA+BtB,KAEjC,kBACEoB,aAAa,QACbG,UAAQ,EACRJ,MAAO/B,EACPoC,SAAU,SAAAhB,GAAC,OAtEN,SAAAA,GACnBnB,EAASmB,EAAEC,OAAOU,OAEhB,6GACMW,KAAKC,OAAOvB,EAAEC,OAAOU,OAAOa,eAGlC/B,EAAc,IAFdA,EAAc,0BAIjB,CA6D8BgC,CAAazB,EAAjB,EACXmB,OAAQ,SAAAnB,GAAC,OAAID,EAAYC,EAAhB,EACTE,UAAWC,EAAAA,MACXiB,KAAK,QACL1C,KAAK,QACL2C,YAAY,gBAGhB,mBAAOnB,UAAWC,EAAAA,MAAlB,UACGf,GAAiBM,IAChB,gBAAKmB,MAAO,CAAEC,MAAO,OAArB,SAA+BpB,KAEjC,kBACEkB,aAAa,WACbG,UAAQ,EACRJ,MAAO7B,EACPkC,SAAU,SAAAhB,GAAC,OA3EH,SAAAA,GACtBjB,EAAYiB,EAAEC,OAAOU,OACjBX,EAAEC,OAAOU,MAAMM,OAAS,GAC1BtB,EAAiB,0CACZK,EAAEC,OAAOU,OACZhB,EAAiB,yBAGnBA,EAAiB,GAEpB,CAiE8B+B,CAAgB1B,EAApB,EACXmB,OAAQ,SAAAnB,GAAC,OAAID,EAAYC,EAAhB,EACTE,UAAWC,EAAAA,MACXiB,KAAK,WACL1C,KAAK,WACL2C,YAAY,sBAKlB,iBAAKnB,UAAWC,EAAAA,cAAhB,WACE,SAAC,KAAD,CAASD,UAAWC,EAAAA,eAAoBwB,GAAG,SAA3C,oBAIA,mBACEC,UAAWhC,EACXM,UAAWC,EAAAA,UACXiB,KAAK,SAHP,kCAab,ECtKc,SAASS,IACtB,OACE,4BACE,UAAC,KAAD,YACE,iBAAMnD,KAAK,cAAcoD,QAAQ,uBAEjC,gDAEF,SAACxD,EAAD,MAGL,C","sources":["webpack://react-team-project/./src/components/RegisterForm/RegisterForm.module.scss?49ba","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btnOrange\":\"RegisterForm_btnOrange__frDQA\",\"btnTransperent\":\"RegisterForm_btnTransperent__YF7HF\",\"container\":\"RegisterForm_container__kVfjz\",\"register\":\"RegisterForm_register__pnoI2\",\"header\":\"RegisterForm_header__dWp7v\",\"buttonSection\":\"RegisterForm_buttonSection__bf-ib\",\"input\":\"RegisterForm_input__IemEh\",\"label\":\"RegisterForm_label__OWQvs\"};","import { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { register } from 'redux/auth/operations';\nimport { useEffect, useState } from 'react';\nimport css from './RegisterForm.module.scss';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [nameDirty, setNameDirty] = useState('');\n  const [emailDirty, setEmailDirty] = useState(false);\n  const [passwordDirty, setPasswordDirty] = useState(false);\n  const [nameError, setNameError] = useState('Pleas enter name');\n  const [emailError, setEmailError] = useState('Pleas enter email');\n  const [passwordError, setPasswordError] = useState('Pleas enter password');\n  const [formValid, setFormValid] = useState(false);\n\n  useEffect(() => {\n    if (emailError || passwordError || nameError) {\n      setFormValid(false);\n    } else {\n      setFormValid(true);\n    }\n  }, [emailError, passwordError, nameError]);\n\n  const blurHandler = e => {\n    switch (e.target.name) {\n      case 'name':\n        setNameDirty(true);\n        break;\n      case 'email':\n        setEmailDirty(true);\n        break;\n      case 'password':\n        setPasswordDirty(true);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const nameHandler = e => {\n    setName(e.target.value);\n    if (e.target.value.length < 3) {\n      setNameError('Name length must be at least 3 characters long');\n      if (!e.target.value) {\n        setNameError('Pleas enter name');\n      }\n    } else {\n      setNameError('');\n    }\n  };\n\n  const emailHandler = e => {\n    setEmail(e.target.value);\n    const re =\n      /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\n    if (!re.test(String(e.target.value).toLowerCase())) {\n      setEmailError('Pleas enter valid email');\n    } else {\n      setEmailError('');\n    }\n  };\n\n  const passwordHandler = e => {\n    setPassword(e.target.value);\n    if (e.target.value.length < 8) {\n      setPasswordError('Password must be at least 8 characters');\n      if (!e.target.value) {\n        setPasswordError('Pleas enter password');\n      }\n    } else {\n      setPasswordError('');\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    dispatch(\n      register({\n        username: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    setPassword('');\n    setEmail('');\n    setName('');\n  };\n\n  return (\n    <div className={css.box}>\n      <div className={css.container}>\n        <h3 className={css.header}>REGISTER</h3>\n        <div>\n          <form onSubmit={handleSubmit} autoComplete=\"off\">\n            <div className={css.register}>\n              <label className={css.label}>\n                {nameDirty && nameError && (\n                  <div style={{ color: 'red' }}>{nameError}</div>\n                )}\n                <input\n                  autoComplete=\"name\"\n                  required\n                  value={name}\n                  onChange={e => nameHandler(e)}\n                  onBlur={e => blurHandler(e)}\n                  className={css.input}\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Name *\"\n                />\n              </label>\n              <label className={css.label}>\n                {emailDirty && emailError && (\n                  <div style={{ color: 'red' }}>{emailError}</div>\n                )}\n                <input\n                  autoComplete=\"email\"\n                  required\n                  value={email}\n                  onChange={e => emailHandler(e)}\n                  onBlur={e => blurHandler(e)}\n                  className={css.input}\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email *\"\n                />\n              </label>\n              <label className={css.label}>\n                {passwordDirty && passwordError && (\n                  <div style={{ color: 'red' }}>{passwordError}</div>\n                )}\n                <input\n                  autoComplete=\"password\"\n                  required\n                  value={password}\n                  onChange={e => passwordHandler(e)}\n                  onBlur={e => blurHandler(e)}\n                  className={css.input}\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password *\"\n                />\n              </label>\n            </div>\n\n            <div className={css.buttonSection}>\n              <NavLink className={css.btnTransperent} to=\"/login\">\n                Login\n              </NavLink>\n\n              <button\n                disabled={!formValid}\n                className={css.btnOrange}\n                type=\"submit\"\n              >\n                Register\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Helmet } from 'react-helmet-async';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <meta name=\"description\" content=\"Registration page\" />\n\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["RegisterForm","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","nameDirty","setNameDirty","emailDirty","setEmailDirty","passwordDirty","setPasswordDirty","nameError","setNameError","emailError","setEmailError","passwordError","setPasswordError","formValid","setFormValid","useEffect","blurHandler","e","target","className","css","onSubmit","preventDefault","form","currentTarget","register","username","elements","value","autoComplete","style","color","required","onChange","length","nameHandler","onBlur","type","placeholder","test","String","toLowerCase","emailHandler","passwordHandler","to","disabled","Register","content"],"sourceRoot":""}